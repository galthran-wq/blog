[
  {
    "objectID": "posts/2025-09-25-test/index.html",
    "href": "posts/2025-09-25-test/index.html",
    "title": "Test: Math + Python (Notebook)",
    "section": "",
    "text": "This post demonstrates math and executable Python in an .ipynb."
  },
  {
    "objectID": "posts/2025-09-25-test/index.html#math",
    "href": "posts/2025-09-25-test/index.html#math",
    "title": "Test: Math + Python (Notebook)",
    "section": "Math",
    "text": "Math\nThe quadratic formula:\n\\[x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\\]\nA short inline sum: \\(\\sum_{i=1}^n i = \\frac{n(n+1)}{2}\\).\n\nimport math\n\ndef quadratic_roots(a, b, c):\n    disc = b*b - 4*a*c\n    return ((-b - math.sqrt(disc)) / (2*a), (-b + math.sqrt(disc)) / (2*a))\n\nquadratic_roots(1, -3, 2)\n\n(1.0, 2.0)"
  },
  {
    "objectID": "posts/2025-09-25-test/index.html#plot-example",
    "href": "posts/2025-09-25-test/index.html#plot-example",
    "title": "Test: Math + Python (Notebook)",
    "section": "Plot example",
    "text": "Plot example\nA quick Matplotlib plot.\n\n%matplotlib inline\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(-3, 3, 200)\ny = x**2 - 3*x + 2\n\nplt.plot(x, y)\nplt.title(\"y = x^2 - 3x + 2\")\nplt.grid(True)\nplt.show()"
  },
  {
    "objectID": "posts/2025-09-25-test/index.html#interactive-plot-example",
    "href": "posts/2025-09-25-test/index.html#interactive-plot-example",
    "title": "Test: Math + Python (Notebook)",
    "section": "Interactive plot example",
    "text": "Interactive plot example\n\nimport plotly.express as px\n\ndf = px.data.iris()\nfig = px.scatter(\n    df, x=\"sepal_width\", y=\"sepal_length\",\n    color=\"species\", title=\"Interactive Iris Scatter\", height=420\n)\nfig  # returning the figure renders it interactively"
  },
  {
    "objectID": "posts/2025-09-25-test/index.html#interactive-plot-with-hide-input",
    "href": "posts/2025-09-25-test/index.html#interactive-plot-with-hide-input",
    "title": "Test: Math + Python (Notebook)",
    "section": "Interactive plot with hide input",
    "text": "Interactive plot with hide input"
  },
  {
    "objectID": "posts/2025-09-25-test/index.html#with-slider",
    "href": "posts/2025-09-25-test/index.html#with-slider",
    "title": "Test: Math + Python (Notebook)",
    "section": "With-slider",
    "text": "With-slider\n\nimport plotly.express as px\ndf = px.data.gapminder()\nfig = px.scatter(\n    df, x=\"gdpPercap\", y=\"lifeExp\",\n    animation_frame=\"year\", animation_group=\"country\",\n    size=\"pop\", color=\"continent\", hover_name=\"country\",\n    log_x=True, size_max=45, range_x=[100, 100000], range_y=[25, 90],\n    title=\"Gapminder (use slider)\"\n)\nfig"
  },
  {
    "objectID": "myblog.html",
    "href": "myblog.html",
    "title": "myblog",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "myblog.html#quarto",
    "href": "myblog.html#quarto",
    "title": "myblog",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  }
]